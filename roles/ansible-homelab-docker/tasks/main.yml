---
- name: Install python3-pip
  ansible.builtin.apt:
    name: python3-pip
    state: present
  register: result
  until: result is succeeded

- name: Install docker python module
  ansible.builtin.pip:
    name: docker
    state: present
  register: result
  until: result is succeeded

- name: Install dependencies
  ansible.builtin.apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
      - ca-certificates
      - curl
      - gnupg

- name: Add the GPG key for Docker
  ansible.builtin.apt_key:
    url: curl -fsSL https://download.docker.com/linux/debian/gpg
    state: present

- name: Add apt repository for stable version
  ansible.builtin.apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/debian bookworm stable
    state: present

- name: Install Docker
  ansible.builtin.apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
      - python3-pip

- name: Add user to docker group
  user:
    name: "{{ansible_user}}"
    group: docker

- name: Create Docker home directory
  ansible.builtin.file:
    path: "{{ docker_home }}"
    mode: 0755
    state: directory

- name: Add user account to Docker group
  ansible.builtin.user:
    name: "{{ ansible_nas_user }}"
    groups: docker
    append: yes

- name: Generate Docker daemon.json
  ansible.builtin.copy:
    dest: /etc/docker/daemon.json
    content: "{{ docker_daemon_json | to_nice_json }}"
  register: docker_config

- name: Restart Docker # noqa no-handler
  ansible.builtin.service:
    name: docker
    state: restarted
  when: docker_config.changed
